#ifndef _VDEC_H
#define _VDEC_H

typedef enum SAMPLE_COMM_VDEC_NAL_TYPE
{
    SAMPLE_VDEC_NAL_TYPE_SVAC_RESERVED0 = 0,
    SAMPLE_VDEC_NAL_TYPE_HEVC_BSLICE = 0,
    SAMPLE_VDEC_NAL_TYPE_HEVC_PSLICE = 1,
    SAMPLE_VDEC_NAL_TYPE_SVAC_NON_ISLICE = 1,
    SAMPLE_VDEC_NAL_TYPE_SVAC_ISLICE = 2,
    SAMPLE_VDEC_NAL_TYPE_SVAC_NON_ISLICE_EL = 3,
    SAMPLE_VDEC_NAL_TYPE_SVAC_ISLICE_EL= 4,
    SAMPLE_VDEC_NAL_TYPE_SVAC_SEU    = 6,
    SAMPLE_VDEC_NAL_TYPE_SVAC_SEI    = 6,
    SAMPLE_VDEC_NAL_TYPE_SVAC_SPS    = 7,
    SAMPLE_VDEC_NAL_TYPE_SVAC_PPS    = 8,
    SAMPLE_VDEC_NAL_TYPE_SVAC_SEC    = 9,
    SAMPLE_VDEC_NAL_TYPE_SVAC_AUTH_DATA = 10,
    SAMPLE_VDEC_NAL_TYPE_SVAC_STREAM_END = 11,
    SAMPLE_VDEC_NAL_TYPE_HEVC_IDR_W_RADL = 19,
    SAMPLE_VDEC_NAL_TYPE_HEVC_IDR_N_LP = 20,
    SAMPLE_VDEC_NAL_TYPE_HEVC_CRA    = 21,
    SAMPLE_VDEC_NAL_TYPE_HEVC_XXXXX3 = 22,
    SAMPLE_VDEC_NAL_TYPE_HEVC_VPS    = 32,
    SAMPLE_VDEC_NAL_TYPE_HEVC_SPS    = 33,
    SAMPLE_VDEC_NAL_TYPE_HEVC_PPS    = 34,
    SAMPLE_VDEC_NAL_TYPE_HEVC_SEI    = 39,
    SAMPLE_VDEC_NAL_TYPE_SVAC_MAX
}SAMPLE_VDEC_NAL_TYPE;

/* We just coyp this value of payload type from RTP/RTSP definition */
typedef enum
{
    PT_PCMU          = 0,
    PT_1016          = 1,
    PT_G721          = 2,
    PT_GSM           = 3,
    PT_G723          = 4,
    PT_DVI4_8K       = 5,
    PT_DVI4_16K      = 6,
    PT_LPC           = 7,
    PT_PCMA          = 8,
    PT_G722          = 9,
    PT_S16BE_STEREO  = 10,
    PT_S16BE_MONO    = 11,
    PT_QCELP         = 12,
    PT_CN            = 13,
    PT_MPEGAUDIO     = 14,
    PT_G728          = 15,
    PT_DVI4_3        = 16,
    PT_DVI4_4        = 17,
    PT_G729          = 18,
    PT_G711A         = 19,
    PT_G711U         = 20,
    PT_G726          = 21,
    PT_G729A         = 22,
    PT_LPCM          = 23,
    PT_CelB          = 25,
    PT_JPEG          = 26,
    PT_CUSM          = 27,
    PT_NV            = 28,
    PT_PICW          = 29,
    PT_CPV           = 30,
    PT_H261          = 31,
    PT_MPEGVIDEO     = 32,
    PT_MPEG2TS       = 33,
    PT_H263          = 34,
    PT_SPEG          = 35,
    PT_MPEG2VIDEO    = 36,
    PT_AAC           = 37,
    PT_WMA9STD       = 38,
    PT_HEAAC         = 39,
    PT_PCM_VOICE     = 40,
    PT_PCM_AUDIO     = 41,
    PT_AACLC         = 42,
    PT_MP3           = 43,
    PT_ADPCMA        = 49,
    PT_AEC           = 50,
    PT_X_LD          = 95,
    PT_H264          = 96,
    PT_D_GSM_HR      = 200,
    PT_D_GSM_EFR     = 201,
    PT_D_L8          = 202,
    PT_D_RED         = 203,
    PT_D_VDVI        = 204,
    PT_D_BT656       = 220,
    PT_D_H263_1998   = 221,
    PT_D_MP1S        = 222,
    PT_D_MP2P        = 223,
    PT_D_BMPEG       = 224,
    PT_MP4VIDEO      = 230,
    PT_MP4AUDIO      = 237,
    PT_VC1           = 238,
    PT_JVC_ASF       = 255,
    PT_D_AVI         = 256,
    PT_DIVX3		 = 257,
    PT_AVS			 = 258,
    PT_REAL8		 = 259,
    PT_REAL9		 = 260,
    PT_VP6			 = 261,
    PT_VP6F			 = 262,
    PT_VP6A			 = 263,
    PT_SORENSON	 	 = 264,
    PT_H265          = 265,
    PT_MAX           = 266,
    /* add by hisilicon */
    PT_AMR           = 1001,
    PT_MJPEG         = 1002,
    PT_AMRWB         = 1003,

   /* add by chenxj */
    PT_SVAC			= 10001,
    PT_DIVA			= 10002,
    PT_SECY			= 10003,
    PT_DIVA_MAIN 	= 10004,
    PT_DIVA_SUB 		= 10005,
    PT_SVAC2	 		= 10006,
    PT_BUTT
} PAYLOAD_TYPE_E;


unsigned int SAMPLE_COMM_UMT_GetOneFrameFromFile(FILE *codingFile, char *pu8Addr, PAYLOAD_TYPE_E codeType);

#endif
